trigger:
- main

variables:
  dockerRegistryServiceConnection: 'dockerhub'
  imageRepository: 'dotnetexpose'
  containerRegistry: 'blesson2001'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'regcred'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:

- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: docker login
    - task: Docker@1
      inputs:
          script: docker image build -t $(containerRegistry)/$(imageRepository):$(tag)
    - task: Docker@2
      inputs:
          script: docker push $(containerRegistry)/$(imageRepository):$(tag)

          


- stage: Development
  displayName: Deploy to dev
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy to dev
    pool:
      vmImage: $(vmImageName)
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/deployment.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
